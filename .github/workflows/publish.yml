name: Publish to SonaType

on:
  push:
    tags:
      - 'v*.*.*'

env:
  SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PROJECT_URL: ${{ secrets.PROJECT_URL }}
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 3
          token: ${{ secrets.PAT }}

      - name: Set Env
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/*/}
          RELEASE_VERSION=${RELEASE_VERSION#v}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_VERSION: $RELEASE_VERSION"

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Extract Signing Secret Key Ring
        run: |
          echo $SECRET_KEY_RING_BASE64 | base64 --decode > ${GITHUB_WORKSPACE}/secring.gpg
        env:
          SECRET_KEY_RING_BASE64: ${{ secrets.SECRET_KEY_RING_BASE64 }}

      - name: Nexus Repo Publish
        run: |
          echo "RELEASE_VERSION=${RELEASE_VERSION}"
          RELEASE_VERSION=${RELEASE_VERSION} ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository \
            -PSONATYPE_USERNAME=${SONATYPE_USERNAME} \
            -PSONATYPE_PASSWORD=${SONATYPE_PASSWORD} \
            -Psigning.keyId=${SIGNING_KEY_ID} \
            -Psigning.password=${SIGNING_PASSWORD} \
            -Psigning.secretKeyRingFile=${GITHUB_WORKSPACE}/secring.gpg
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: "Extract Git info"
        run: |
          echo "GITHUB_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>' | xargs)" >> $GITHUB_ENV
          echo "GITHUB_REVISION=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "GITHUB_REPO=$(git config --get remote.origin.url)" >> $GITHUB_ENV

          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          GITHUB_COMMITS=$(git --no-pager log --pretty=format:'%h (%an) %s' -n3 --no-color |  while read line || [ -n "$line" ]; do echo -n "- $line \\n"; done)
          echo "GITHUB_COMMITS<<$EOF" >> "$GITHUB_ENV"
          echo $GITHUB_COMMITS | sed "s/\"/'/g" >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "${{ env.SLACK_CHANNEL }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":rocket: *${{ github.event.repository.name }} - Deployed to DEV*"
                  }
                },{
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Created by:* ${{ env.GITHUB_AUTHOR }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```${{ env.GITHUB_COMMITS }}```"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View changes"
                      },
                      "style": "primary",
                      "url": "${{ env.GITHUB_REPO }}/commit/${{ env.GITHUB_REVISION}}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Site"
                      },
                      "style": "primary",
                      "url": "${{ env.PROJECT_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
